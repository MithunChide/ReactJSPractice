{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","onClick","closePopup","App","onSearchChange","event","setState","searchfield","target","value","openPopup","popup","state","a","console","log","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Fragment","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECQCQ,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,gBACpD,gCACE,6BAAKL,IACL,4BAAIC,WCSGK,EAbE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAO,cAAC,EAAD,CAAMR,GAAIO,EAAMP,GAAIF,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,OAAYS,SCC/DC,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,EAC3DT,UAAU,oCCQCa,EAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCOJC,G,MAXD,SAACN,GACf,OACI,qBAAKd,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAeqB,QAASP,EAAMQ,WAA7C,qBC6FGC,G,wDA3Fb,aAAc,IAAD,8BACX,gBAQFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAV/B,EA0BbC,UAAY,WACV,EAAKJ,SAAS,CAACK,OAAM,KA3BV,EA8BbT,WAAa,WACX,EAAKI,SAAS,CAACK,OAAM,KA7BrB,EAAKC,MAAQ,CACX5B,OAAS,GACTuB,YAAc,GACdP,OAAO,GALE,E,4FAab,iCAAAa,EAAA,6DACEC,QAAQC,IAAI,+BADd,SAEQC,MAAM,8CACX9C,MAAK,SAAC+C,GACL,OAAOA,EAASC,UAEjBhD,MAAK,SAACiD,GACL,EAAKb,SAAS,CAACtB,OAAOmC,OAP1B,OAUEL,QAAQC,IAAI,uBAVd,2C,0EAsBA,WAAS,IAAD,OAEND,QAAQC,IAAI,iBACZ,IAAMK,EAAiBC,KAAKT,MAAM5B,OAAOsC,QAAO,SAACpC,GAC/C,OAAOA,EAAMT,KAAK8C,cAAcC,SAAS,EAAKZ,MAAML,YAAYgB,kBAGlE,OAAQH,EAAeK,OAGrB,eAAC,IAAMC,SAAP,WACCL,KAAKT,MAAMD,MAAQ,cAAC,EAAD,CAAOT,WAAcmB,KAAKnB,aAAgB,GAC9D,sBAAKtB,UAAU,KAAf,UACE,0CACA,wBAAQqB,QAASoB,KAAKX,UAAtB,wBACA,cAAC,EAAD,CAAWrB,aAAgBgC,KAAKjB,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpB,OAAQoC,YAVQ,kD,GA5ClBO,cCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.4272ae4e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name,email,id}) => {\n  return(\n    <div className=' tc bg-light-green dib br3 pa3 grow ma2 shadow-2'>\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robotsImage\"/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {robots.map((robot,i) => {\n        return <Card id={robot.id} name={robot.name} email={robot.email} key={i}/>\n      })\n      }\n      \n    </div>\n  )\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return(\n    <input type=\"search\" placeholder=\"Search robots\" onChange={searchChange} \n    className=\"pa3 ba b-green bg-light-green \"/>  \n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll = (props) => {\n\n    return (\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '500px'  }}>\n            {props.children}\n        </div>\n    )\n\n}\n\nexport default Scroll;","import React from 'react';\nimport './Popup.css';\n\nconst Popup = (props) => {\nreturn(\n    <div className=\"popup--back\">\n        <div className=\"popup--content\">\n            <div className=\"popup--close\" onClick={props.closePopup}>X</div>\n        </div>\n\n    </div>\n)\n}\n\nexport default Popup;","import React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport Popup from \"../components/Popup\";\nimport './App.css';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      robots : [],\n      searchfield : '',\n      Popup: false\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield : event.target.value});\n  }\n\n  async componentDidMount(){\n    console.log(\"inside component did mount!\");\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response)=>{\n      return response.json();\n    })\n    .then((users) => {\n      this.setState({robots:users});\n    })\n\n    console.log(\"After Stteing State\");\n  }\n\n  openPopup = () => {\n    this.setState({popup:true});\n  }\n\n  closePopup = () => {\n    this.setState({popup:false});\n  }\n\n\n  render(){\n    // const {robots,searchfield} = this.state;\n    console.log(\"Render runned\");\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    return !filteredRobots.length ? <h1>Loading.....</h1>:\n\n    (\n      <React.Fragment>\n      {this.state.popup ? <Popup closePopup = {this.closePopup}/> : \"\"}\n      <div className=\"tc\">\n        <h1>Robofans</h1>{/*You need to change this message when no robots name matches! */}\n        <button onClick={this.openPopup}>Open Popup</button>\n        <SearchBox searchChange = {this.onSearchChange}/>\n        <Scroll>\n          <CardList robots={filteredRobots}/>\n        </Scroll>\n      </div>\n      </React.Fragment>\n    )\n  }\n  \n}\n// constructor(){\n//   super();\n//   this.state = {\n//     name : \"Mithun\",\n//   }\n//   console.log(\"inside Constructor\");\n// }\n// componentWillMount(){\n//   console.log(\"inside Component will mount!\");\n//   setTimeout(() => {\n//     this.setState({name :\"Akash will\"});\n//   },2000)\n// }\n\n// componentDidMount(){\n//   console.log(\"inside component did mount!\");\n//   setTimeout(() => {\n//     this.setState({name:\"Hanuman did\"});\n//   },3000)\n// }\n\n// render(){\n//   console.log(\"Render Runned\");\n//   return(\n//       <h1>Hello World this is {this.state.name}</h1>\n\n//   )\n// }\n// }\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './container/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}